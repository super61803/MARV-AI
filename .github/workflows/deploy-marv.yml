name: Deploy Marv App to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Build the application
      run: npm run build

    - name: Compress the build directory
      run: tar -czf build.tar.gz -C ./build .

    - name: Compress the dist directory
      run: tar -czf dist.tar.gz -C ./dist .

    - name: Deploy to EC2
      env:
        AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
        AWS_EC2_USER: ${{ secrets.AWS_EC2_USER }}
        AWS_EC2_KEY: ${{ secrets.AWS_EC2_KEY }}
      run: |
        # Save the SSH key
        echo "$AWS_EC2_KEY" > ec2-key.pem
        chmod 600 ec2-key.pem

        # Copy the build to the EC2 instance
        scp -i ec2-key.pem build.tar.gz $AWS_EC2_USER@$AWS_EC2_HOST:/home/$AWS_EC2_USER/
        scp -i ec2-key.pem dist.tar.gz $AWS_EC2_USER@$AWS_EC2_HOST:/home/$AWS_EC2_USER/

        # SSH into the EC2 instance and deploy
        ssh -i ec2-key.pem $AWS_EC2_USER@$AWS_EC2_HOST << 'EOF'
          # Extract the build
          mkdir -p /home/$AWS_EC2_USER/marv-api
          tar -xzf /home/$AWS_EC2_USER/build.tar.gz -C /home/$AWS_EC2_USER/marv-api
          tar -xzf /home/$AWS_EC2_USER/dist.tar.gz -C /home/$AWS_EC2_USER/marv-api
          
          # Navigate to the application directory
          cd /home/$AWS_EC2_USER/marv-api

          # Install dependencies
          npm install

          # Restart the Node.js application (assuming you are using PM2 or a similar process manager)
          pm2 restart marv-api || pm2 start /home/$AWS_EC2_USER/marv-api/app.js --name marv-api
        EOF

    - name: Clean up
      run: rm -f ec2-key.pem build.tar.gz
